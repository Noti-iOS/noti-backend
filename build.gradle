buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}
plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}



group = 'com.noti'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.11'

	// WebClient
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	//
	// Querydsl 추가 시작
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
	// Querydsl 추가 끝

	// JSONParser
	implementation 'org.json:json:20220320'
	implementation group: 'com.googlecode.json-simple', name:'json-simple', version:'1.1.1'

	// JAVA JWT
	implementation 'com.auth0:java-jwt:4.0.0'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// firebase admin sdk
	implementation 'com.google.firebase:firebase-admin:9.2.0'

	// m1 spring cloud gateway
	implementation 'io.netty:netty-resolver-dns-native-macos:4.1.82.Final:osx-aarch_64'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.testcontainers:testcontainers:1.17.5'
	testImplementation 'org.testcontainers:junit-jupiter:1.17.5'
	testImplementation 'org.testcontainers:mysql:1.17.5'

	// 테스트 객체 생성을 위한 Fixture-monkey 추가
 	testImplementation 'com.navercorp.fixturemonkey:fixture-monkey-starter:0.5.1'
	testImplementation 'com.navercorp.fixturemonkey:fixture-monkey-javax-validation:0.5.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

processResources.dependsOn('copyPrivate')

task copyPrivate(type: Copy) {
	copy {
		from './noti-config'
		include "*.yaml", "*.json"
		into 'src/main/resources'
	}
}

jar {
	enabled = false
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslDir]
		}
	}
}

compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	querydsl.extendsFrom compileClasspath
}